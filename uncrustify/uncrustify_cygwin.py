#this version is only for cygwin user
#need to install cygwin version uncrustify.exe

import os
import re
import sys

# Record the current directory.
curdir = os.getcwd()
uncrustifycommand = 'uncrustify.exe -c ' + curdir + os.sep + 'uncrustify.cfg --replace '

isAll = False
# Parse arguments.
for arg in sys.argv :
    if arg == '-all' :
        isAll = True
        break

if not isAll :
    # Only run uncrustify on the changed files, use svn to get the changed file list.
    os.chdir(os.pardir)
    os.chdir(os.pardir)
    os.chdir(os.pardir)
    os.system('svn status -q > filelist.txt')

    # If file exists, open and read it to memory.
    if os.path.isfile('filelist.txt') :
        filelist = open('filelist.txt', 'r')
        filetext = filelist.read()
        filelist.close()
        os.system('rm -f filelist.txt')
    else :
        isAll = True

    os.chdir(curdir)

# The loopdir function to run uncrustify.
def loopdir(startdir, startreldir) :
    # Go to the start directory.
    os.chdir(startdir)
    
    # Loop the subfolders & files.
    for item in os.listdir(os.curdir) :
        if os.path.isdir(item) :
            # Skip the .svn folders.
            resdir = re.match('.svn$', item)
            if resdir is None:
                # Recursively call.
                loopdir(item, os.path.join(startreldir, item))
                # Back to the parent directory.
                os.chdir(os.pardir)
        else :
            # Check if the filename ends with .h, .hpp or .cpp.
            resfile = re.search('\.h$|\.hpp$|\.cpp$', item)
            if resfile is not None :
                # Run uncrustify with replacing the existing files directly.
                index = 0
                if not isAll :
                    relname = os.path.join(startreldir, item)
                    index = filetext.find(relname)
                if index > -1 :
                    print( os.path.join(os.getcwd(), item) )
                    unccommand = uncrustifycommand + '"' + item + '"'
                    os.system(unccommand)
                    # Delete the temporary files generated by uncrustify.
                    os.system('rm -f "' + item + '.unc-backup"*')

# Call loopdir function to loop the given directory recursively.
loopdir( os.path.join("../../../", 'driver/src'), 'driver/src')
os.chdir(curdir)

# Call loopdir function to loop the given directory recursively.
loopdir( os.path.join("../../../", 'driver/test'), 'driver/test') 
os.chdir(curdir)

# Call loopdir function to loop the given directory recursively.
loopdir( os.path.join("../../", 'demo'), 'demo') 
os.chdir(curdir)

# Call loopdir function to loop the given directory recursively.
loopdir( os.path.join("../../", 'samples'), 'samples') 
os.chdir(curdir)

# Call loopdir function to loop the given directory recursively.
loopdir( os.path.join("../../", 'test'), 'test') 
os.chdir(curdir)

# Call loopdir function to loop the given directory recursively.
loopdir( os.path.join("../../", 'tools/prototypes'), 'tools/prototypes') 
os.chdir(curdir)
