vertex_program PostFilters/ObjectGlowing/ScreenQuad hlsl
{
	source ObjectGlowing.hlsl
	entry_point ScreenQuadVS
	target vs_3_0

	default_params
	{
	  param_named_auto WvpXf worldviewproj_matrix
	}
}

fragment_program PostFilters/ObjectGlowing/get_glow hlsl
{
	source ObjectGlowing.hlsl
	entry_point GetGlow_PS
	target ps_3_0
}

fragment_program PostFilters/ObjectGlowing/down_sample hlsl
{
	source ObjectGlowing.hlsl
	entry_point DownSample_PS
	target ps_3_0
}

fragment_program PostFilters/ObjectGlowing/HorizontalBlur hlsl
{
	source ObjectGlowing.hlsl
	entry_point HorizontalBlur_PS
	target ps_3_0

	default_params
	{
	  param_named_auto viewportSize viewport_size
	}
}

fragment_program PostFilters/ObjectGlowing/VerticalBlur hlsl
{
	source ObjectGlowing.hlsl
	entry_point VerticalBlur_PS
	target ps_3_0

	default_params
	{
	  param_named_auto viewportSize viewport_size
	}
}

fragment_program PostFilters/ObjectGlowing/blend_fp hlsl
{
	source ObjectGlowing.hlsl
	entry_point blend_fp
	target ps_3_0
	
	default_params
	{
	  param_named lightWeight float 1.0
	}
}

///////////////////////////////////
//			 PASS -1
//		GET GLOW PASS
///////////////////////////////////

material PostFilters/ObjectGlowing/GetGlow
{
	technique
	{
		pass
		{
			lighting off
			fog_override true
			cull_hardware none
			cull_software none
			depth_check off
			depth_write off

			vertex_program_ref PostFilters/ObjectGlowing/ScreenQuad
			{
			}
			fragment_program_ref PostFilters/ObjectGlowing/get_glow
			{
			}

			texture_unit
			{
				//texture @SceneGlowMap
				tex_address_mode clamp
				filtering none
			}
		}
	}
}

///////////////////////////////////
//			 PASS 0
//		DOWN SAMPLE PASS
///////////////////////////////////

material PostFilters/ObjectGlowing/DownSample
{
	technique
	{
		pass
		{
			lighting off
			fog_override true
			cull_hardware none
			cull_software none
			depth_check off
			depth_write off

			vertex_program_ref PostFilters/ObjectGlowing/ScreenQuad
			{
			}
			fragment_program_ref PostFilters/ObjectGlowing/down_sample
			{
			}

			texture_unit
			{
				//texture <input>
				tex_address_mode clamp
				filtering none
			}
		}
	}
}

///////////////////////////////////
//			 PASS 1
//		HORIZONTAL BLUR PASS
///////////////////////////////////

material PostFilters/ObjectGlowing/BlurHorizontal
{
	technique
	{
		pass
		{
			lighting off
			fog_override true
			cull_hardware none
			cull_software none
			depth_check off
			depth_write off

			vertex_program_ref PostFilters/ObjectGlowing/ScreenQuad
			{
			}
			
			fragment_program_ref PostFilters/ObjectGlowing/HorizontalBlur
			{
			}

			texture_unit
			{
				//texture <input>
				tex_address_mode clamp
				filtering bilinear
			}
		}
	}
}


///////////////////////////////////
//			 PASS 2
//		VERTICAL BLUR PASS
///////////////////////////////////

material PostFilters/ObjectGlowing/BlurVertical
{
	technique
	{
		pass
		{
			lighting off
			fog_override true
			cull_hardware none
			cull_software none
			depth_check off
			depth_write off

			vertex_program_ref PostFilters/ObjectGlowing/ScreenQuad
			{
			}
			
			fragment_program_ref PostFilters/ObjectGlowing/VerticalBlur
			{
			}

			texture_unit
			{
				//texture <input>
				tex_address_mode clamp
				filtering bilinear
			}
		}
	}
}


///////////////////////////////////
//			 PASS 3
//		BLEND PASS
///////////////////////////////////

material PostFilters/ObjectGlowing/Blend
{
	technique testtech
	{
		pass testtech
		{
			//lighting off
			fog_override true
			cull_hardware none
			cull_software none
			depth_check off
			depth_write off

			vertex_program_ref PostFilters/ObjectGlowing/ScreenQuad
			{
			}
			fragment_program_ref PostFilters/ObjectGlowing/blend_fp
			{
			}
			texture_unit glowImage
			{
				//texture <input0>
				tex_address_mode clamp
				filtering bilinear
			}
			texture_unit baseImage
			{
				//texture <input1>
				tex_address_mode clamp
				filtering none
			}

			texture_unit blurImage
			{
				//texture <input2>
				tex_address_mode clamp
				filtering bilinear
				//tex_coord_set 1
			}

		}
	}
}
