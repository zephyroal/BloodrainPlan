#version 120

uniform mat4 worldViewProj;
uniform vec4 texelOffsets;
<<<<<<< local
uniform vec4 depthRange;
=======
>>>>>>> other

<<<<<<< local
=======
attribute vec4 vertex;

>>>>>>> other
varying vec2 depth;

void main()
{
<<<<<<< local
	gl_Position = ftransform();

=======
	vec4 outPos = worldViewProj * vertex;
	outPos.xy += texelOffsets.zw * outPos.w;
>>>>>>> other
	// fix pixel / texel alignment
<<<<<<< local
	gl_Position.xy += texelOffsets.zw * gl_Position.w;
	// linear depth storage
	// offset / scale range output
#if LINEAR_RANGE
	depth.x = (gl_Position.z - depthRange.x) * depthRange.w;
#else
	depth.x = gl_Position.z;
#endif
	depth.y = gl_Position.w;


=======
	depth = outPos.zw;
	gl_Position = outPos;
>>>>>>> other
}

